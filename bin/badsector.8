.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "badsector 8"
.TH badsector 8 "2012-02-19" "badsector" "System Commands"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
badsector \- find and relocate unused bad sectors in ext filesystem
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  badsector [options] <harddisk device> <PROBLEM_LBA>
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Implement the algorithm described in \s-1STANDARDS\s0 section for the
ext[2\-4] partitions only.
.PP
The \fIsmarmontools\fR can report problematic bad sectors in \s-1LBA\s0
addressing format. This program relocates bad \s-1LBA\s0 sector provided it
is unused.
.PP
However, if the sector contains data, there is nothing that can be
done. This program is no \*(L"spinrite\*(R" and it is not cabable of reading
or restoring damaged data.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-a, \-\-auto\fR" 4
.IX Item "-a, --auto"
Use \fIdd\fR\|(1) to force relocating unused lba error block. Use at your own
risk.
.IP "\fB\-r, \-\-read\fR" 4
.IX Item "-r, --read"
Try reading \s-1PROBLEM_LBA\s0 with \fIdd\fR\|(1). If bad, this might relocate a bad sector
in modern harddisks.
.IP "\fB\-t, \-\-test\fR" 4
.IX Item "-t, --test"
Do not really do actions instructed by option \fB\-\-auto\fR, but show
commands that would be run.
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Display this help and exit
.IP "\fB\-V, \-\-version\fR" 4
.IX Item "-V, --version"
Output version information and exit.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Run disk test on harddisk and look at the results:
.PP
.Vb 4
\&    smartctl \-t short /dev/sda
\&    smartctl \-l selftest /dev/sda
\&    smartctl \-l error \-q errorsonly /dev/sda
\&    smartctl \-A /dev/sda
.Ve
.PP
After \f(CW\*(C`smartctl \-t short /dev/sda\*(C'\fR has finished, pick the \s-1LBA\s0 value
from the output. The last test run is always at the top:
.PP
.Vb 3
\&    $ smartctl \-l selftest /dev/sda
\&    Num  Test_Description  Status        Remaining  LifeTime(hours)  LBA_of_first_error
\&    1  Extended offline    read failure  90%        217              0x016561e9
.Ve
.PP
Try to relocate this bad sector:
.PP
.Vb 1
\&    badsector \-\-auto [\-\-test] /dev/sda 0x016561e9
.Ve
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
None.
.SH "FILES"
.IX Header "FILES"
None.
.SH "STANDARDS"
.IX Header "STANDARDS"
\&\*(L"Bad block \s-1HOWTO\s0 for smartmontools\*(R" by Bruce Allen
<http://smartmontools.sourceforge.net/BadBlockHowTo.txt>.
.SH "AVAILABILITY"
.IX Header "AVAILABILITY"
http://freecode.com/projects/badsector
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIsmartctl\fR\|(1)
.SH "AUTHORS"
.IX Header "AUTHORS"
Program was written by Jari Aalto <jari.aalto@cante.net>
.PP
Released under license \s-1GNU\s0 \s-1GPL\s0 version 2 or (at your option) any later
version. For more information about license, visit
<http://www.gnu.org/copyleft/gpl.html>.
